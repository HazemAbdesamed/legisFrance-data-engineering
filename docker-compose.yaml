version: '3.7'
services:
    mongodb:
      image: mongo:5.0.16-focal
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: root
        MONGO_INITDB_DATABASE: legisFrance
      ports:
        - 27017:27017
      volumes:
        - ./mongodb/db_data:/data/db 
        - ./csv_files:/csv_files/
        - ./mongodb/initdb.js:/docker-entrypoint-initdb.d/initdb.js
      networks:
        - my-network


    webserver:
        build:
            context: ./airflow/
            dockerfile: Dockerfile
        restart: always
        depends_on:
            - mongodb
            - chrome
        environment:
            - INSTALL_MYSQL=y
            - LOAD_EX=n
            - AIRFLOW__SCHEDULER__STATSD_ON=True
            - AIRFLOW__SCHEDULER__STATSD_HOST=statsd-exporter
            - AIRFLOW__SCHEDULER__STATSD_PORT=9125
            - AIRFLOW__SCHEDULER__STATSD_PREFIX=airflow
        volumes:
            - ./airflow/config/airflow.cfg:/usr/local/airflow/airflow.cfg
            - ./airflow/requirements.txt:/requirements.txt
            - ./airflow/dags:/usr/local/airflow/dags
            - ./mongodb/db_data:/usr/local/airflow/db_data_airflow/
            - ./csv_files:/csv_files
            - ./airflow/visualizations/:/usr/local/airflow/visualizations/
        ports:
            - "8080:8080"
        networks:
            - my-network
        command: webserver

    statsd-exporter:
        image: prom/statsd-exporter:v0.21.0
        ports:
            - 9102:9102
            - 9125:9125
            - 9125:9125/udp
        hostname: statsd    
        volumes:
            - ./monitoring/statsd/statsd.yaml:/home/statsd-mapping-configs.yaml
        entrypoint: ["/bin/sh", "-c", "--"]
        command: ["statsd_exporter --log.level debug --statsd.mapping-config=/home/statsd-mapping-configs.yaml"]    
        restart: always
        networks:
            - my-network   

    prometheus:
        image: prom/prometheus:v2.26.0
        hostname: prometheus
        volumes:
            - ./monitoring/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
            - ./monitoring/prometheus/volume:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yaml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'  
        ports:
            - 9092:9090
        restart: always
        networks:
            - my-network             

    grafana:
        image: grafana/grafana:6.7.2
        container_name: grafana
        hostname: grafana
        volumes:
            - ./monitoring/grafana/config/grafana.ini:/etc/grafana/grafana.ini
            - ./monitoring/grafana/volume:/var/lib/grafana
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=password
            - GF_USERS_ALLOW_SIGN_UP=true
        restart: always
        ports:
            - 3000:3000
        networks:
            - my-network    

    chrome:
        image: selenium/standalone-chrome:4.9.0
        hostname: chrome
        ports:
            - "4444:4444"
        environment:
            SE_VNC_NO_PASSWORD: 1
            JAVA_OPTS: -Dwebdriver.chrome.whitelistedIps=
        networks:
            - my-network

networks:
  my-network:
    driver: bridge             
